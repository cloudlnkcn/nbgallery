javascript:
  $(document).ready(function(){
    //Make tables look pretty, oh so pretty!

    $('.sparkline').sparkline();

    $.fn.sparkline.defaults.line.lineColor = 'black';
    $.fn.sparkline.defaults.line.fillColor  = 'gray';
    $.fn.sparkline.defaults.line.highlightSpotColor ='black';
    $.fn.sparkline.defaults.line.highlightLineColor ='black';

    $('.minimize').shave(100);

    $('.tooltip-right').tooltipster({
      maxWidth:500,
      side:'right'
    });

    $('.tooltips, .tooltip-title').tooltipster({
      maxWidth:250
    });
  });

-if sort_options == true
  div.searchResults id='beta_layout'
    table id='searchTable'
      tr
        th.searchHeader Tags
        th.searchHeader Total Notebooks
        th.searchHeader Groups
        th.searchHeader Filter
      tr
        td.sortData
          -unless @tags.blank? || @page.to_i > 1
            -@tags.each do |tag, count|
              a href="/tags/#{tag}"
                span.label.tag style ='background-color: #{color_for(tag)}' =tag
              br
              br
        td.sortData
          input type='hidden' id='sortHidden' value="#{params[:sort] || 'trendiness'}"
          - counter = ((params['page']&.to_i || 1) - 1) * Notebook.per_page
          - total = defined?(@notebooks.total_entries) ? @notebooks.total_entries : '?'
          -unless @notebooks.empty? or defined? suggested_view
            h3.text-right #{@notebooks.total_entries} notebooks
        td.sortData
          -unless @groups.blank? || @page.to_i > 1
            -@groups.first(3).each do |group, count|
              h2.groupSearchResults
                a.searchResultsGroup href="#{url_for(group)}"
                  span.tooltips.join title="#{count} notebooks = #{group.description}" #{group.name}
              br
        td.sortData 
          -unless @notebooks.empty? or defined? suggested_view
            form id='sortResultsForm' method='get'
              select.form-control.sortDropDown id='sort' name='sort'
                option value='trendiness' id='trendiness' Trending
                option value='created_at' id='created_at' Recently Created
                option value='updated_at' id='updated_at' Recently Updated
                option value='title' id='title' Title
                option value='views' id='views' Most Views
                option value='stars' id='stars' Most Stars
                option value='runs' id='runs' Most Runs
                option value='score' id='score' Relevance
                option value='trendiness' id='trendiness' Trending
              -params.each do |key, value|
                -next if %w(id sort ascending splat captures controller action partial_name).include?(key)
                input type='hidden' name==key value==CGI.escape_html(value)
  div.container
    -if @notebooks.empty? and @group_results.nil? and @tag_results.nil?
      div.no-notebooks
        p.sad-face
        | :-(
        p Sorry, no notebooks found

br
-if @notebooks.empty?
  h1 No noteboks
-else
  br
  table.content.table-responsive id='beta_nbTable'
    tr.headline
      th.head_lang Lang
      th.head_lang Health
      th.head_stats Stats
      th.head_title Notebook
      th.head_tags Tags
      th.head_sparkline Use in last 30 days
    -@notebooks.each do |nb|
      -@exec_history = nb.execution_history
      tr
        td.lang
          ==render partial: 'language_icons', locals: { notebook: nb }
        td.lang
          a href="#{metrics_notebook_path(nb) + '?beta=true'}#metricsHealth" class='tooltips' title="#{nb.notebook_summary.health_description}"
            -if nb.unhealthy?
              span.fa.fa-medkit.action-icon.view-summary.health.unhealthy
            -elsif nb.healthy?
              span.fa.fa-medkit.action-icon.view-summary.health.healthy
            -else
              span.fa.fa-medkit.action-icon.view-summary.health.healthUnknown
        td.stats
          div
            -if defined? group_view
              ==render partial: 'nb_stats', locals: { notebook: nb, group_view: true }
            -else
              ==render partial: 'nb_stats', locals: { notebook: nb }
        td
          div.info
            ==render partial: GalleryConfig.slim.table_nb_title, locals: { nb: nb }
            hr.cell align="left"
            ==render partial: GalleryConfig.slim.table_nb_description, locals: { nb: nb }
            div.owner_footer
              span.table_footer Owner:
              -if nb.owner.is_a? User
                ==render partial: 'author_rep_trophy_icon', locals: {author: nb.owner}
                a href="#{user_path(nb.owner, beta:"true")}"
                  span.table_footer =nb.owner.name
              -else
                a href="#{group_path(nb.owner, beta:"true")}"
                  span.table_footer =nb.owner.name
              br
              span.table_footer Last updated by:
              ==render partial: 'author_rep_trophy_icon', locals: {author: nb.updater}
              a href="#{user_path(nb.updater, beta: "true")}"
                  span.table_footer =nb.updater.name + ' '
              p.table_footer =time_ago_in_words(nb.updated_at) + ' ago'
            -unless nb.snippet(@user).blank?
              hr.divider
                div id='snippetInfo' ==nb.snippet(@user)
        td
          div.tagRow
            -nb.tags.first(10).each do |tag|
              a href="/tags/#{tag.tag + '?beta=true'}"
                span.label.tag style='font-size: 13px; font-family: Calibri; color: white; background-color: #{color_for(tag.tag)}' =tag.tag
            -if nb.tags.size > 10
              a href="#{url_for(nb) + '?beta=true'}"
                span.label.tag style='color: white; background-color: black' ...
        td
          div.gitup-fork-ribbon-wrapper.right
            div.github-fork-ribbon
              //TODO use the rails friendly URL, which requires update to run_in_jupyter.js.erb
              //a.run_jupyter href="#{url_for(nb)}" Run in Jupyter >>
              a.run_jupyter href="/notebook/#{ nb.uuid }" Run in Jupyter >>
              input type='hidden' value="#{(defined?(ref) && !ref.blank? ? ('?ref=' + ref) : '')}"
          div.sparkline style='margin-top: 30%' #{(1..30).map{ |i| @exec_history.fetch(i.days.ago.to_date, 0)}.reverse.join(',') }

  -if @notebooks.respond_to? :total_pages
    nav.text-center
      ==will_paginate @notebooks, renderer: BootstrapPagination::Rails
  nav.text-center
    ul.pagination
